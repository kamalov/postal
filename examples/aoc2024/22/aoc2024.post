fn next(number: int)
    two24 = 1 lshift 24
    n = number

    v = n lshift 6
    n = n xor v
    n = n mod two24

    v = n rshift 5
    n = n xor v
    n = n mod two24

    v = n lshift 11
    n = n xor v
    n = n mod two24

    ret n
end

fn int_arr_to_str(a: [int])
    s = ''
    for a {
        if s <> '' do s = s + ','
        s = s + int_to_str(it)
    }
    ret s
end

fn get_number(last4: [int], base: int)
    if len(last4) <> 4 do err('get_number ' + int_to_str(len(last4)))
    den = 1
    v = 0
    for last4 {
        v = v + den*(it + 9)
        den = den*base
    }
    ret v
end

fn int_to_arr(n: int, base: int)
    r = [int]
    v = n
    loop {
        rem = v mod base
        push(r, rem - 9)
        v = v div base
        if v = 0 do break
    }
    ret r
end

fn run
    lines = read_string_lines_from_file('D:/src/postal/aoc2024/input.txt')
    deep = 2000
    t = 0
    acc = [int]
    base = 20
    arr_set_len(acc, base*base*base*base)
    blocked = [int]
    arr_set_len(blocked, base*base*base*base)
    for lines {
        line = it
        if line = '' do break
        v = str_to_int(line)
        prev = v mod 10
        log(v)

        for 0..len(blocked) - 1 do blocked[it] = 0

        last4 = [int]
        for 1..deep {
            v = next(v)
            rem = v mod 10
            diff = rem - prev
            prev = rem
            push(last4, diff)
            if len(last4) > 4 {
                arr_pop_front(last4)
            }

            if len(last4) = 4 {
                //log(line, rem, int_arr_to_str(last4))
                n = get_number(last4, base)
                //log(line, rem, int_arr_to_str(last4), '|', int_arr_to_str(int_to_arr(n, base)))
                if blocked[n] do continue
                acc[n] = acc[n] + rem
                blocked[n] = 1
            }

            //log(v, rem, '(', diff,')')
        }
    }

    max_v = 0
    for acc  {
        if it > max_v do max_v = it
    }
    for acc  {
        if it = max_v {

            log(it, 'max seq', int_arr_to_str(int_to_arr(idx, base)))
        }
    }

    log('\ndone', max_v)
end
