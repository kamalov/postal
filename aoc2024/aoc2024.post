/// array utils
fn len<T>(a: [T]) int external
fn set_size<T>(a: [T], new_size: int) external
fn push<T>(a: [T], elem: T) external
fn set_value<T>(a: [T], index: int, value: T) external
fn sort<T>(a: [T]) external

/// file and string utils
fn read_lines(filename: str) [str] external
fn split_str(s: str, by: str) [str] external
fn str_to_int(s: str) int external
fn int_to_str(i: int) str external
fn str_to_chars(s: str) [str] external
fn str_contains_str(s: str, subs: str) [str] external

fn get_pages_rank(pages: [int], rules: [int]) int 
   for pages {
      if idx = 0 do continue
      page_index = idx
      page = it
      for pages {
         if idx >= page_index do break
         rule = page*100 + it
         for rules {
            if rule = it do ret 0
         }
      }
   }

   i = pages[len(pages)/2]
   ret i
end

fn run
   lines = read_lines('D:/src/postal/aoc2024/input.txt')

   rules = [int]
   set_size(rules, 10000)

   total = 0
   for lines {
      if it = '' do continue
      
      if str_contains_str(it, '|') {
         parts = split_str(it, '|')
         rule = str_to_int(parts[0])*100 + str_to_int(parts[1])
         //push(rules, rule)
      }

      if str_contains_str(it, ',') {
         pages = [int]
         pages_str = split_str(it, ',')
         for pages_str {
            push(pages, str_to_int(it))
         }
         total = total + get_pages_rank(pages, rules)
      }
   }

   log(total, 'done')
end
