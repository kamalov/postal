function test_multiple_params(a: integer, b: real)
    x = a + 1.1
    print(a, b, "  ->  ", x)
end

function test_if(a: integer)
    if a < 0 
        print("a < 0")
    else if a > 10 
        print("a > 10")
    else
        print("a >= 0 and <= 10")
        print(a + 10)
    end
end

function test_loop
    i = 0
    loop
        i = i + 1
        print(i)
        if i = 10 then break
    end
end

function test_iterator
    numbers = [integer]
    array_push(numbers, 123)
    array_push(numbers, 456)
    array_push(numbers, 789)
    for numbers
        print(index) 
        print("numbers ", index, " ", item) 
        for numbers do print("    ", index, " ", item) 
        print("<< ", index, " ", item) 
    end
end

function test_params1(a: integer, b: integer) integer
    return a + b
end

function test_params
    b = 5 + 6 + 7*test_params1(5, 6)
    print(b)
    b = test_params1(test_params1(5, 6), 6)
    print(b)
end

function test_array_access
    numbers = [real]
    array_push(numbers, 123.0)
    array_push(numbers, 456.0)
    array_push(numbers, 789.0)

    for numbers do print(numbers[index])        
end

record Coordinates
    x: real
    y: integer
end

function test_records 
    r = Coordinates {}
    r.x = 10 + 10
    r.y = 20
    print(r.x)
    print(r.y)
    a = r.x*r.y
    print(r.x*r.y)
    print(a)
    print(r.x*r.y = a)
end

function test_strings
    s = "123"
    ss = "abc"
    sss = s + " " + ss
    print(sss)
end

// function read_lines(filename: string) [string] external

// function test_read_lines
//     lines = read_string_lines_from_file("d:/test.txt")
//     for lines do print(index, item)
// end

function run
    test_multiple_params(5, 6.0)
    test_if(-1)
    test_if(5)
    test_if(11)
    test_loop()
    test_iterator()
    test_array_access()
    test_records()
    test_strings()
    //test_read_lines()
    print("done")
end
