rec A {
   a: int
   b: [str]
}

fn run
   amap = #[A, str]
   key = A {}
   key.a = 1
   hashmap_add(amap, key, 'one')
   log(hashmap_len(amap))
   key = A {}
   key.a = 1
   hashmap_remove(amap, key)
   log(hashmap_len(amap))

   // vmap = #[int, int]
   // hashmap_add(vmap, 1, 2)
   // //log(has(vmap, 'one'))
   // b = hashmap_get_value(vmap, 1)
   // log(b)
   // //log(has(vmap, 'two'))
end
