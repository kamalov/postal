rec A {
    b: [int]
}

// fn get_a()
//     a = A {}
//     a.b = [int]
//     ret a
// end

fn test(i: int)
    ret i + 1
end

fn run
    //a = 5
    //if not a do log('not a')
    // a = get_a()
    // push(a.b, 5)
    // c = len(a.b)
    // push(a.b, 6)
    //test()
    //b = [int]
    // c = -1
    // f = 1
    // if not -1 - 1 {
    //     c = 1 + a.b[0]
    // }
    //c = A {}
    c = test(1)
    log(c)
end
