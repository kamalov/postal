fn test_multiple_params(a: int, b: real)
begin
    x = a + 1.1
    log(a, b, '  ->  ', x)
end

fn test_if
begin
    a = 5
    if a < 0 {
        log('a < 0')
    } else if a > 10 {
        log('a > 10')
    } else {
        log('a >= 0 and <= 10')
        log(a + 10)
    }

    // todo: переделать 'else if' и 'else' на 'el'
end

fn test_loop
begin
    i = 0
    loop {
        i = i + 1
        log(i)
        if i = 10 {
            break
        }

        // todo
        // if i = 10 do break
    }
end

fn test_iterator
begin
    items: [int]
    push(items, 123)
    push(items, 456)
    push(items, 789)

    items >> {
        log(it_index) 
        log('items ', it_index, ' ', it) 
        items >> {
            log('    ', it_index, ' ', it) 
        }
        log('<< ', it_index, ' ', it) 
    }
end

fn test_params1(a: int, b: int) int
begin
    ret a + b
end

fn test_params
begin
    b = 5 + 6 + 7*test_params1(5, 6)
    log(b)
    b = test_params1(test_params1(5, 6), 6)
    log(b)
end

fn test_array_access
begin
    items: [real]
    push(items, 123)
    push(items, 456)
    push(items, 789)

    items >> {
        log(items[it_index])        
    }
end

fn all_tests
begin
    test_multiple_params(5, 6)
    test_if()
    test_loop()
    test_iterator()
    test_array_access()
end

rec Coordinates {
    x: int
    y: int    
}

fn run
begin
    //all_tests()

    r: Coordinates
    r.x = 10
    r.y = 20
    log(r.x)
    log(r.y)
    a: int
    a = r.x*r.y
    log(r.x*r.y)
    log(a)
    log(r.x*r.y = a)

    log('done')
end