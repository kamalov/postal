Postal (POST pascAL) programming language

Goal: syntax like TypeScript, compile time speed like Delphi, runtime memory and speed like C++

Priorities (by desc):
1. Typed 
2. Memsafe
3. run time	:: At least C++ runtime performance (speed and memory wise)
4. compile time :: At least Free/Object Pascal compilation speed
5. design time  :: At least TypeScript code writing speed (low friction)

Implementation

Phase zero (proof of concept):
-- transpile to C++
-- single source file
-- ansi strings
-- basic syntax and semantics:
   -- C++/Pascal hybrid syntax
   -- type inference
   -- built-in dyn array and hashtable
   -- only structs (no oop)
   -- generics (if needed)
-- dynamic types (strings, structs, arrays) are refcounted

Phase one:
-- !!! multiple source files
-- nested arrays
-- semantic block comment (clojure style)
-- ? maybe, first class functions
-- ? maybe, variant data type
-- ? maybe, IDE support (language server, etc.)

Phase last (most likely will not be needed soon as transpile to C++ should be enought):
-- for debug mode generate x64 native code (unoptimized) 
-- debug mode compile speed (cold start) >= 100k loc per second
-- debug mode compile speed (hot) == instant (less than 0.1ms)
-- for production generate LLVM code 
-- production mode compile speed >= 10k loc per second


